{"version":3,"sources":["modules/api/api.ts","modules/myWeb.ts","styles/styleConstants.ts","container/Main/main.tsx","assets/memoji.gif","file/index.js","file/Nayoun_Ham_CV.pdf","file/paper.pdf","container/aboutMe.container.tsx","container/projects.container.tsx","container/contact.container.tsx","App.tsx","index.tsx"],"names":["mainService","callAdvice","a","console","log","axios","get","data","rand","Math","floor","random","text","author","getQuoteWalker","myWebSaga","myWebSlice","createSlice","name","initialState","currentUser","quote","reducers","getQuote","setQuote","state","action","payload","setCurrentUser","call","put","myWebActionCreators","takeEvery","actions","myWebReducer","reducer","computerGreen","amber","MainWrapper","styled","div","SubWrapper","Quote","MainContainer","Main","useState","showInput","setShow","isGreeting","setGreeting","userName","setName","isMenu","showMenu","useEffect","window","scroll","onFormSubmit","e","className","strings","typeSpeed","onComplete","document","addEventListener","autoComplete","id","type","placeholder","value","onChange","target","backSpeed","fadeOut","loop","href","resource","CV","KISC","Title","span","Right","Wrapper","Introduce","Left","AboutMeContainer","aboutMe","download","src","memoji","ProjectContainer","Item","Grid","projects","prj","project","url","map","item","init","config","ContactContainer","Contact","contactName","setContactName","isEmail","setEmailAddress","isContent","setContent","popSwal","swal","title","icon","send","preventDefault","test","email","content","emailjs","then","response","status","error","cols","rows","onClick","dispatchProps","Container","connect","dots","infinite","speed","slidesToShow","slidesToScroll","vertical","draggable","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","logger","run","configureStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a24c226c.chunk.js","sourcesContent":["import axios from \"axios\";\n\ntype QuoteType = {\n    text: string;\n    author: string;\n}[];\nconst mainService = {\n    callAdvice: async() => {\n        console.log(\"callAdvice\")\n\n        try {\n            const {data}:any = await axios.get(\n                'https://type.fit/api/quotes'\n            )\n            console.log(data)\n            const rand = Math.floor(Math.random() * Math.floor(1642));\n            console.log(data[rand])\n            const text = data[rand].text;\n            const author = data[rand].author;\n            console.log(text, author)\n            return {text, author};\n        } catch(error) {\n            console.log(error)\n            return null;\n        }\n    }\n};\n\nexport default mainService;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { call, takeEvery, put } from 'redux-saga/effects';\nimport mainService from \"./api/api\";\n\ntype MyWebType = {\n    currentUser: string;\n    quote: string;\n}\n\nconst myWebInitialState: MyWebType = {\n    currentUser: \"\",\n    quote: \"\",\n}\n\nconst myWebSlice = createSlice({\n    name: 'myweb',\n    initialState: myWebInitialState,\n    reducers: {\n        getQuote(){},\n        setQuote(state, action:PayloadAction<{text: string, author: string}>) {\n            const {text, author} = action.payload;\n            state.quote = text + ' ' + (author !== null ? \"@\" + author : '');\n        },\n        setCurrentUser(state, action:PayloadAction<string>) {\n            state.currentUser = action.payload;\n        }\n    }  \n});\n\nfunction* getQuoteWalker() {\n    try{\n        const {text, author} = yield call(mainService.callAdvice);\n       yield put(myWebActionCreators.setQuote({text, author}))\n    } catch(err) {\n        console.log(err)\n    }\n\n}\n\nexport function* myWebSaga() {\n    const {\n        getQuote\n    } = myWebActionCreators;\n    yield takeEvery(getQuote, getQuoteWalker);\n}\n\nexport const myWebActionCreators = {\n    ...myWebSlice.actions,\n};\n\nexport const myWebReducer = myWebSlice.reducer;\nexport type RootState = ReturnType<typeof myWebReducer>;","export const computerGreen = \"#66ff66\";\nexport const amber = \"#FFCC00\";\n\n","import React, { useState, useEffect } from \"react\";\nimport styled from 'styled-components'\nimport Typed from \"react-typed\";\nimport { computerGreen, amber } from \"../../styles/styleConstants\";\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\n\nconst MainWrapper = styled.div`\n  height: 80%;\n`;\n\nconst SubWrapper = styled.div`\n  height:66%;\n`;\nconst Quote = styled.div`\n  color: white;\n  position: relative;\n  top: 87%;\n  font-size: 22px;\n  color: ${computerGreen};\n  font-family: 'Jura', sans-serif;    \n  text-align: center;\n`;\nconst MainContainer = styled.div`\ncolor: white;\nheight: 100vh;\nfont-size: 22px;\nfont-weight: 400;\na {\n  text-decoration: none;\n  color: inherit;\n  &:hover {\n    text-decoration : underline;\n    text-underline-offset: 0.2em;\n    font-style: italic;\n  }\n}\n\n.sub-container {\n  width: 100%;\n    height: 300px;\n}\n@keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n  \n  @-webkit-keyframes fadeOut {\n    0% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n    }\n  }\n  \n  @keyframes fadeOut {\n    0% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n    }\n  }\n\n  input {\n    font-size: 22px;\n      background-color: transparent;\n      border: none;\n      border-bottom: 2px solid ${computerGreen};\n      padding: 7px 0;\n      margin-top: 15px;\n      color: ${computerGreen};\n      font-family: 'Jura', sans-serif;    \n    }\n    input:focus {\n      outline: none;\n      color: ${computerGreen};\n    }\n  \n    input::placeholder {\n      color: ${computerGreen};\n      opacity: 1; /* Firefox */\n    }\n  \n    input:focus::placeholder {\n      color: transparent;\n      transition: 0.5s;\n    }\n\n  .typeJs {\n    color: ${computerGreen};\n    line-height: 121%;\n    font-family: 'Jura', sans-serif;\n    }\n    .greeting {\n      position: absolute;\n       margin-top: 25px;\n      color: ${amber};\n      line-height: 121%;\n      font-family: 'Jura', sans-serif;\n\n    }\n\n    .iconLink {\n      color: ${amber};\n      margin-top: 80px;\n      line-height: 121%;\n      width: fit-content;\n      svg {\n        padding-right: 6px;\n      }\n    }\n   \n  }\n`;\n\ntype MainType = {\n  currentUser: string;\n  quote: string;\n  setCurrentUser: (name: string) => void;\n  getQuote: () => void;\n};\n\nconst Main = ({currentUser, quote, setCurrentUser, getQuote}: MainType) => {\n  const [showInput, setShow] = useState(false);\n  const [isGreeting, setGreeting] = useState(false);\n  const [userName, setName] = useState(\"\");\n  const [isMenu, showMenu] = useState(false);\n  const [mainQuote, setQuote] = useState(\"\");\n\n  useEffect(() => {\n    window.scroll(0,0);\n    getQuote();\n\n  },[])\n\n  const onFormSubmit = (e: any) => {\n    setGreeting(true);\n    setShow(false);\n  };\n\n  return (\n    <MainContainer>\n      <MainWrapper>\n      <div className=\"sub-container\">\n        <Typed\n          className=\"typeJs\"\n          strings={[\n            \"Hello world!<br>I'm Ellie, Software Developer.<br>Residing in Seoul,South Korea.<br><br>What's your name?\",\n          ]}\n          typeSpeed={35}\n          onComplete={function () {\n            setShow(true);\n            document.addEventListener(\"submit\", onFormSubmit);\n          }}\n        />\n        {showInput === true ? (\n          <form className=\"name-form\">\n            <input autoComplete=\"off\" id=\"mainName\" className=\"nameInput\" type=\"text\" placeholder=\"Name\" value={userName}\n            onChange = {(e) => {\n            setName(e.target.value)\n            }}\n            />\n          </form>\n        ) : (\n          \"\"\n        )}\n        {isGreeting ? (\n          <>\n            <br></br>\n            <Typed\n              className=\"greeting\"\n              strings={[\n                `Welcome ${userName}!`,\n                \"Feel free to browse\",\n                \"👋👋👋👋👋👋👋\",\n              ]}\n              typeSpeed={20}\n              backSpeed={20}\n              fadeOut={false}\n              loop={false}\n              onComplete={function () {\n                showMenu(true);\n              }}\n            />\n          </>\n        ) : (\n          \"\"\n        )}\n        {isMenu === true ? (\n            <div className=\"iconLink\">\n            <a href=\"https://github.com/hamny88\">\n            <div className=\"github\">\n              <ArrowForwardIosIcon />\n              Github{' '}\n              <GitHubIcon />\n              </div> \n            </a>\n            <a href=\"https://www.linkedin.com/in/nayoun-ellie-ham-6a3373179/\" target=\"_blank\">\n            <div className=\"LinkedIn\">\n            <ArrowForwardIosIcon />\n              LinkedIn {' '}\n            <LinkedInIcon />  \n            </div>\n            </a>\n            </div>\n            \n        ) : (\n          \"\"\n        )}\n      </div>\n      <SubWrapper>\n      <Quote>\n        <span className=\"quote\">{quote}</span>\n      </Quote>\n      </SubWrapper>\n      \n      </MainWrapper>\n    </MainContainer>\n  );\n};\n\nexport default Main;\n","export default __webpack_public_path__ + \"static/media/memoji.b6a0b186.gif\";","import CV from './Nayoun_Ham_CV.pdf';\nimport KISC from './paper.pdf';\n\nconst resource = {\n    CV,\n    KISC,\n};\n\nexport default resource;","export default __webpack_public_path__ + \"static/media/Nayoun_Ham_CV.5a31a759.pdf\";","export default __webpack_public_path__ + \"static/media/paper.c72be39c.pdf\";","import React from 'react';\nimport styled from 'styled-components';\nimport Typed from \"react-typed\";\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport { computerGreen, amber } from \"../styles/styleConstants\";\nimport memoji from \"../assets/memoji.gif\";\nimport resource from \"../file/index\";\n\nconst Title = styled.span`\nfont-size:35px;\ncolor: white;\nfont-family: 'Orbitron', sans-serif;\n`;\n\nconst Right = styled.div`\n`;\nconst Wrapper = styled.div`\n    height: 80%;\n`;\nconst Introduce = styled.div`\n    line-height: 30px;\n    font-family: 'Jura', sans-serif;\n    color: white;\n    font-size: 25px;\n    margin-top: 50px;\n    display: flex;\n    justify-content: space-between;\n    .cv {\n        width: fit-content;\n        margin-top: 50px;\n        font-family: 'Jura', sans-serif;\n        color: ${amber}\n    }\n    a {\n    text-decoration: none;\n    color: inherit;\n    &:hover {\n        text-decoration : underline;\n        text-underline-offset: 0.2em;\n        font-style: italic;\n    }\n}\n`;\n\nconst Left = styled.div``;\nconst AboutMeContainer = styled.div`\nheight: 100vh;\n`;\nconst aboutMe = () => {\n    return(\n        <AboutMeContainer>\n        <Wrapper className=\"wrapper\">\n        <Title>Code the dream <br></br>\n        Build the World\n        </Title>\n\n        <Introduce>\n        <Left>\n        Hi 👋 I'm {' '}\n        <Typed \n            className=\"name\"\n            strings={['Nayoun ham', 'Ellie', '001111110011111100111111','👩‍💻']}\n            typeSpeed={30}\n            backSpeed={30}\n            fadeOut={false}\n            loop={true}    \n        ></Typed>\n        {' '}, Software developer. <br/> \n        Love to challenge new things like new trends and activities. <br/>\n        Trying to change the world more friendly and energetic with my skills. <br/>\n        I believe world can be better with technologies from better person. <br />\n        If you have a same value with me, scroll down to last page then you can send me an email. <br />\n        Or you can get in touch with LinkedIn message.\n        <div className=\"cv\">\n        <a className=\"resume\" href={resource.CV} download>\n        <ArrowForwardIosIcon />\n            Download CV\n            </a>\n        </div>\n        </Left>\n        <Right>\n            <img src={memoji} />\n        </Right>\n        </Introduce>\n        </Wrapper>\n        </AboutMeContainer>\n    )\n}\n\nexport default aboutMe;","import React from \"react\";\nimport styled from 'styled-components';\nimport resource from '../file/index';\n\nconst ProjectContainer = styled.div`\npadding: 10px;\n    height: 100vh;\n    a {\n        text-decoration: none;\n    }\n    a:visited {\n        color: black;\n    }\n    .title {\n        font-weight: 600;\n    margin-top: 30px;\n    }\n`;\nconst Title = styled.span`\nfont-size:35px;\ncolor: white;\nfont-family: 'Orbitron', sans-serif;\n`;\n\nconst Item = styled.div`\n   background-color: #EDEDED;\n    border-radius: 5px; \n    margin-top: 20px;\n    padding: 10px;\n    width: 200px;\n    height: 100px;\n    margin-right: 50px;\n    font-family: 'Jura', sans-serif;    \n  text-align: center;\n  font-size: 22px;\n  &:hover {\n    -ms-transform: scale(1.5); /* IE 9 */\n  -webkit-transform: scale(1.5); /* Safari 3-8 */\n  transform: scale(1.1); \n  }\n`;\n\nconst Grid = styled.div`\n    display: flex;\n    margin-top: 30px;\n`;\n\nconst projects = () => {\n\n    const prj = [{\n    project: \"pocketSurvey\",\n    url: \"https://home.pocketsurvey.co.kr/\",\n    },\n    {\n        project: \"ATNS usa\",\n        url: \"https://www.wenestim.com/default.html\",\n    },\n    {\n        project: \"KISC\",\n        url: resource.KISC,\n    }\n    ];\n\n    return(\n        <ProjectContainer>\n        <Title>projects</Title>\n        <Grid>\n            {\n                prj.map((item) => {\n                    return (\n                        <a href={item.url} target=\"_blank\" >\n                        <Item>\n                            <div className=\"title\">{item.project}</div>\n                        </Item>\n                        </a>\n\n                    )\n                })\n            }\n        </Grid>\n        </ProjectContainer>\n    )\n};\n\nexport default projects;","import React, { useState, useEffect } from \"react\";\nimport styled from 'styled-components';\nimport Typed from \"react-typed\";\nimport emailjs from \"emailjs-com\";\nimport{ init } from 'emailjs-com';\nimport swal from 'sweetalert';\n\ninit(\"user_VcKbEvgNqCWXHlhByqVGU\");\n\nconst config = {\n    serviceID : \"service_qwtteyi\",\n    templateID : \"template_3f5hhcq\",\n    userID : \"user_VcKbEvgNqCWXHlhByqVGU\",\n    AccessToken: \"c96c23b7ebef0a50478a6a91924df8ef\"\n\n};\n\nconst ContactContainer = styled.div`\n    height: 100vh;\n`;\n\nconst Wrapper = styled.div`\n    height: 80%;\n    .contact-type {\n        color: white;\n        font-size: 18px;\n        margin-top: 50px;\n        padding-left: 40px;\n    }\n    .addressQ {\n        margin-top: 50px;\n    }\n    input, textarea {\n        font-size: 17px;\n        width: 250px;\n        border: 0;\n        border-bottom: 1px solid #555;\n        background-color: transparent;\n        color: whitesmoke;\n        font-family: 'Open Sans', sans-serif;\n        padding-top: 16px;\n\n        &:focus {\n            border: none;\n            outline: none;\n            border-bottom: 1px solid #e74c3c;\n        }\n    }\n    textarea {\n        margin-top: 50px;\n        width: 50%;\n        border: 1px solid #555;\n        border-radius: 5px;\n    \n        &:focus {\n            border: 1px solid #e74c3c;\n\n        }\n    }\n    button {\n        color: black;\n        font-family: 'Open Sans', sans-serif;\n        height: 30px;\n        cursor: pointer;\n        width: 88px;\n        margin-top: 30px;\n    }\n    .particles-bg-canvas-self {\n        position: relative !important;\n    }\n   \n    `;\n    const Title = styled.span`\n    font-size:35px;\n    color: white;\n    font-family: 'Orbitron', sans-serif;\n    `;\n\nconst Contact = () => {\n\n    const [contactName, setContactName] = useState(\"\");\n    const [isEmail, setEmailAddress] = useState(\"\");\n    const [isContent, setContent] = useState(\"\");\n\n    const popSwal = (target: string) => {\n        swal({\n            title: \"Error\",\n            text: target + \" is not correct\",\n            icon: \"error\"\n        });\n    };\n    const validationCheck = () => {\n        var emailRgx = /\\w+@\\w+.(\\w+.\\w+)/g;\n        \n        if(contactName == \"\") {\n            popSwal(\"Name\");\n            return false;\n        } else if(!emailRgx.test(isEmail)) {\n            popSwal(\"Email\");\n            return false;\n        } else if(isContent == \"\") {\n           popSwal(\"Content\");\n           return false;\n        } else {\n            return true;\n        }\n    };\n\n    const send = (e:any) => {\n        e.preventDefault();\n        if(validationCheck()){\n            const data = {\n                name : contactName,\n                email : isEmail,\n                content: isContent,\n            };\n            emailjs.send(config.serviceID, config.templateID,data )\n                .then(function(response) {\n                    console.log(\"SUCCESS\", response.status, response.text);\n                    setContactName(\"\");\n                    setEmailAddress(\"\");\n                    setContent(\"\");\n                    swal({\n                        title: \"Success\",\n                        text: \"Yoiur email sent successfully!\",\n                        icon: \"success\"\n                    });\n\n                }, function(error) {\n                    console.log('Failed', error)\n                });\n        } else {\n            console.log(\"Validation Failed\")\n        }\n\n    };\n\n    return(\n        <ContactContainer>\n            <Wrapper className=\"contact-wrapper\">\n                 <Title>Contact</Title>\n                 <div className=\"particle\">\n                 </div>\n                 <div className=\"contact-type\">\n                    <div className=\"nameQ\">\n                        What's your name?\n                    </div>\n                    <input className=\"conact-name-input\" value={contactName} type=\"text\" placeholder=\"Name\" onChange = {(e) => {\n                        setContactName(e.target.value)\n                    }} />\n                    <div className=\"addressQ\">\n                        What's your email address?\n                    </div>\n                    <input className=\"contact-email-input\" value={isEmail} type=\"text\" placeholder=\"email\" onChange = {(e) => {\n                        setEmailAddress(e.target.value)\n                    }} />\n                    <div className=\"content\">\n                        <textarea placeholder=\"content\" value={isContent} className=\"content-input\" autoComplete=\"off\" cols={50} rows={10} onChange={(e) => setContent(e.target.value)} />\n                    </div>\n                    <button onClick={(e)=> {\n                        send(e);\n                    }}>Submit</button>\n                </div>\n            </Wrapper>\n        </ContactContainer> \n    )\n};\n\nexport default Contact;","import React, { useEffect, useRef,useState } from \"react\";\nimport \"react-typed/dist/animatedCursor.css\";\nimport Slider from \"react-slick\";\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { myWebActionCreators, RootState } from './modules/myWeb';\nimport \"./App.scss\";\nimport Main from \"./container/Main/main\";\nimport AboutMe from \"./container/aboutMe.container\";\nimport Projects from \"./container/projects.container\";\nimport Contact from \"./container/contact.container\";\n\ntype myWebAppType = {\n  currentUser: string;\n  quote: string;\n};\n\ntype myWebType = ReturnType<typeof mapStateToProps>&\n  typeof dispatchProps &\n  myWebAppType;\n\nconst mapStateToProps = (state: RootState) => ({\n  currentUser : state.currentUser,\n  quote: state.quote,\n\n});\n\nconst dispatchProps = {\n  getQuote: myWebActionCreators.getQuote,\n  setCurrentUser: myWebActionCreators.setCurrentUser,\n}\n\nconst Container = styled.div`\nmargin: 0;\nbackground-color: rgb(24, 24,24);\npadding: 60px 40px 0px 60px;\n.slick-dots {\n  display: flex !important;\n  top: 10%;\n  right: 0%;\n  width: 0% !important;\n  bottom: 0px !important;\n  flex-direction: column !important;\n  align-items: flex-end !important;\n}\n.slick-dots li button:before {\n  color: gray !important;\n}\n.slick-dots li button:after {\n  color: white !important;\n}\n\n.slick-arrow{\n  display: none !important;\n}\n\n`;\n\n\nfunction App( {currentUser, quote, setCurrentUser, getQuote} : myWebType) {\n\n  var settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    vertical: true,\n    draggable: true,\n  };\n  return (\n    <Container>\n      <Slider {...settings} >\n      <Main \n        quote={quote}\n        currentUser = {currentUser}\n        setCurrentUser = {setCurrentUser}\n        getQuote = {getQuote}\n        ></Main>\n      <AboutMe></AboutMe>\n      <Projects></Projects>\n      <Contact></Contact>\n      </Slider>\n      \n    </Container>\n  );\n}\n\nexport default connect(mapStateToProps, dispatchProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { all } from 'redux-saga/effects';\nimport {myWebSaga, myWebReducer} from './modules/myWeb';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n//순서 중요함 . saga running전에 mount시키기. \nfunction configureStore() {\n  const store = createStore(\n    myWebReducer, \n    composeWithDevTools(applyMiddleware(sagaMiddleware, logger)))\n    sagaMiddleware.run(myWebSaga);\n    return { store} ;\n}\n\nconst { store } = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}